<?xml version="1.0" encoding="UTF-8"?>
<ExternalServiceRegistration xmlns="http://soap.sforce.com/2006/04/metadata">
    <label>ExtServiceSFStatus</label>
    <namedCredentialReference>SF_Status</namedCredentialReference>
    <operations>
        <active>false</active>
        <name>deletesubscriptionwithtoken</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getactiveincident</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getcountrycodes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getgeneralmessagebyid</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getgeneralmessages</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getincidentbyid</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getincidenteventtypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getincidentfields</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getincidentimpacttypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getincidents</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinformationalmessagespreview</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinstancealiasbykey</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinstances</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinstancestatusbyalias</name>
    </operations>
    <operations>
        <active>true</active>
        <name>getinstancestatusbykey</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinstancestatuses</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinstancestatuspreview</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinstancestatuspreviewbyalias</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getinstancestatuspreviewbykey</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getlocales</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getlocalizations</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmaintenancebyid</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmaintenanceeventtypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmaintenancefields</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmaintenances</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmaintenancespreview</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmetricvalue</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getmetricvaluebyid</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getproductbyid</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getproductcategories</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getproductcategorybyid</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getproducts</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getsearch</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getservices</name>
    </operations>
    <operations>
        <active>false</active>
        <name>getsubscriberwithtoken</name>
    </operations>
    <operations>
        <active>false</active>
        <name>gettags</name>
    </operations>
    <operations>
        <active>false</active>
        <name>gettagsbyinstancekey</name>
    </operations>
    <operations>
        <active>false</active>
        <name>gettagtypes</name>
    </operations>
    <operations>
        <active>false</active>
        <name>login</name>
    </operations>
    <operations>
        <active>false</active>
        <name>logout</name>
    </operations>
    <operations>
        <active>false</active>
        <name>patchsubscriberwithtoken</name>
    </operations>
    <operations>
        <active>false</active>
        <name>patchsubscriptionwithtoken</name>
    </operations>
    <operations>
        <active>false</active>
        <name>postnumberwithtoken</name>
    </operations>
    <operations>
        <active>false</active>
        <name>postsubscriptionwithtoken</name>
    </operations>
    <operations>
        <active>false</active>
        <name>subscribe</name>
    </operations>
    <operations>
        <active>false</active>
        <name>unsubscribe</name>
    </operations>
    <operations>
        <active>false</active>
        <name>verifyuser</name>
    </operations>
    <registrationProviderType>Custom</registrationProviderType>
    <schema>{
  &quot;swagger&quot;: &quot;2.0&quot;,
  &quot;info&quot;: {
    &quot;version&quot;: &quot;1.0.0&quot;,
    &quot;title&quot;: &quot;Status API for trust1&quot;
  },
  &quot;basePath&quot;: &quot;/v1&quot;,
  &quot;schemes&quot;: [
    &quot;https&quot;
  ],
  &quot;consumes&quot;: [
    &quot;application/json&quot;
  ],
  &quot;produces&quot;: [
    &quot;application/json&quot;
  ],
  &quot;paths&quot;: {
    &quot;/localizations&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;localization&quot;,
      &quot;x-sequelize-model&quot;: &quot;Localization&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;localizations&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;translation&quot;
        ],
        &quot;description&quot;: &quot;Returns object array of localized text&quot;,
        &quot;operationId&quot;: &quot;getLocalizations&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;locale&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;required&quot;: false,
          &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;modelName&quot;,
                  &quot;modelKey&quot;,
                  &quot;modelAttribute&quot;
                ],
                &quot;properties&quot;: {
                  &quot;id&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;modelName&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;modelKey&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;modelAttribute&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;LocalizedTexts&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;text&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;code&quot;: {
                          &quot;type&quot;: &quot;string&quot;,
                          &quot;maxLength&quot;: 10
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/incidents&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;incident&quot;,
      &quot;x-sequelize-model&quot;: &quot;Incident&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;incidents&quot;,
      &quot;x-dataStoreClient-enabled&quot;: true,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;incidents&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of Incident objects. Defaults to last 30 days.&quot;,
        &quot;operationId&quot;: &quot;getIncidents&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;startTime&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Start time for Incidents to return (ISO 8601)&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;dateTime&quot;
          },
          {
            &quot;name&quot;: &quot;service&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Filter by impacted Services (case insensitive)&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;instance&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Filter by impacted Instances (case insensitive)&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;limit&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Limit for pagination&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;number&quot;,
            &quot;default&quot;: 10000,
            &quot;maximum&quot;: 10000
          },
          {
            &quot;name&quot;: &quot;offset&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Offset for pagination&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;number&quot;
          },
          {
            &quot;name&quot;: &quot;sort&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Sort by property&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;order&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Ordering of property&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;locale&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;required&quot;: false,
            &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;id&quot;
                ],
                &quot;properties&quot;: {
                  &quot;id&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;message&quot;: {
                    &quot;type&quot;: [
                      &quot;object&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;externalId&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;affectsAll&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;isCore&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;additionalInformation&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;serviceKeys&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  },
                  &quot;instanceKeys&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  },
                  &quot;IncidentImpacts&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;required&quot;: [
                        &quot;startTime&quot;,
                        &quot;type&quot;
                      ],
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;startTime&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;endTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceIssue&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;endUserImpact&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;type&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;IncidentEvents&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;required&quot;: [
                        &quot;type&quot;
                      ],
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;type&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;createdAt&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;updatedAt&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/incidents/{id}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;incident&quot;,
      &quot;x-sequelize-model&quot;: &quot;Incident&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;incidents&quot;,
      &quot;x-cdn-paramsIncludedInKey&quot;: [
        &quot;id&quot;
      ],
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;incidents&quot;
        ],
        &quot;description&quot;: &quot;Returns an Incident based on Id.&quot;,
        &quot;operationId&quot;: &quot;getIncidentById&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;id&quot;,
            &quot;in&quot;: &quot;path&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Incident id&quot;,
            &quot;required&quot;: true
          },
          {
            &quot;name&quot;: &quot;locale&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Two-letter language code (ISO 639-1) &quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;required&quot;: [
                &quot;id&quot;
              ],
              &quot;properties&quot;: {
                &quot;id&quot;: {
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;message&quot;: {
                  &quot;type&quot;: [
                    &quot;object&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;externalId&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;affectsAll&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;isCore&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;additionalInformation&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;serviceKeys&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                },
                &quot;instanceKeys&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                },
                &quot;IncidentImpacts&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;required&quot;: [
                      &quot;startTime&quot;,
                      &quot;type&quot;
                    ],
                    &quot;properties&quot;: {
                      &quot;id&quot;: {
                        &quot;type&quot;: &quot;integer&quot;
                      },
                      &quot;startTime&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;endTime&quot;: {
                        &quot;type&quot;: [
                          &quot;string&quot;,
                          &quot;null&quot;
                        ]
                      },
                      &quot;serviceIssue&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;endUserImpact&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;type&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;createdAt&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;updatedAt&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      }
                    }
                  }
                },
                &quot;IncidentEvents&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;required&quot;: [
                      &quot;type&quot;
                    ],
                    &quot;properties&quot;: {
                      &quot;id&quot;: {
                        &quot;type&quot;: &quot;integer&quot;
                      },
                      &quot;type&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;message&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;createdAt&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;updatedAt&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      }
                    }
                  }
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          },
          &quot;404&quot;: {
            &quot;description&quot;: &quot;Incident not found&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/incidents/fields&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;incidentField&quot;,
      &quot;x-sequelize-model&quot;: &quot;Field&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;incidents&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;incidents&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of Incident fields.&quot;,
        &quot;operationId&quot;: &quot;getIncidentFields&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;locale&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;required&quot;: false,
          &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;key&quot;,
                  &quot;model&quot;
                ],
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;model&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/incidents/impactTypes&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;incidentImpactType&quot;,
      &quot;x-sequelize-model&quot;: &quot;IncidentImpactType&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;incidents&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;incidents&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of incident impact type fields.&quot;,
        &quot;operationId&quot;: &quot;getIncidentImpactTypes&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;locale&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;required&quot;: false,
          &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;severity&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;isActive&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/incidents/eventTypes&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;incidentEventType&quot;,
      &quot;x-sequelize-model&quot;: &quot;IncidentEventType&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;incidents&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;incidents&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of incident impact type fields.&quot;,
        &quot;operationId&quot;: &quot;getIncidentEventTypes&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;locale&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;required&quot;: false,
          &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;isActive&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/incidents/active&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;incident&quot;,
      &quot;x-sequelize-model&quot;: &quot;Incident&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;incidents&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;incidents&quot;
        ],
        &quot;description&quot;: &quot;Returns active incidents&quot;,
        &quot;operationId&quot;: &quot;getActiveIncident&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;id&quot;
                ],
                &quot;properties&quot;: {
                  &quot;id&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;message&quot;: {
                    &quot;type&quot;: [
                      &quot;object&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;externalId&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;affectsAll&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;isCore&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;additionalInformation&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;serviceKeys&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  },
                  &quot;instanceKeys&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  },
                  &quot;IncidentImpacts&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;required&quot;: [
                        &quot;startTime&quot;,
                        &quot;type&quot;
                      ],
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;startTime&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;endTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceIssue&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;endUserImpact&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;type&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;IncidentEvents&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;required&quot;: [
                        &quot;type&quot;
                      ],
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;type&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;createdAt&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;updatedAt&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/maintenances&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;maintenance&quot;,
      &quot;x-sequelize-model&quot;: &quot;Maintenance&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;maintenances&quot;,
      &quot;x-dataStoreClient-enabled&quot;: true,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;maintenances&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of Maintenance objects. Defaults to last 30 days.&quot;,
        &quot;operationId&quot;: &quot;getMaintenances&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;startTime&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Start time for Maintenance to return (ISO 8601)&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;dateTime&quot;
          },
          {
            &quot;name&quot;: &quot;service&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Filter by impacted Services (case insensitive, full text search)&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;instance&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Filter by impacted Instances (case insensitive, full text search)&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;name&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Filter by Name (case insensitive, full text search)&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;limit&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Limit for pagination (Range: 0 - 1000)&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;number&quot;,
            &quot;default&quot;: 1000,
            &quot;maximum&quot;: 1000
          },
          {
            &quot;name&quot;: &quot;offset&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Offset for pagination&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;number&quot;,
            &quot;default&quot;: 0
          },
          {
            &quot;name&quot;: &quot;sort&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Sort by property&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;order&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Order by &apos;ASC&apos; for ascending order, or &apos;DESC&apos; for descending order (case insensitive).\nOnly used in combination with a valid sort property (Sort by property Required).\n&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;product&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Filter by product&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;locale&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;required&quot;: false,
            &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;id&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;message&quot;: {
                    &quot;type&quot;: [
                      &quot;object&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;externalId&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;name&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;externalMaintenanceType&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;releaseType&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;substrate&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;affectsAll&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;isCore&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;plannedStartTime&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;plannedEndTime&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;additionalInformation&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;serviceKeys&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  },
                  &quot;instanceKeys&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  },
                  &quot;MaintenanceImpacts&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;startTime&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;endTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;type&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;systemAvailability&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;createdAt&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;updatedAt&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/maintenances/preview&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;maintenance&quot;,
      &quot;x-sequelize-model&quot;: &quot;Maintenance&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;maintenances&quot;,
      &quot;x-dataStoreClient-enabled&quot;: true,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;maintenances&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of Maintenance objects. Defaults to last 30 days.&quot;,
        &quot;operationId&quot;: &quot;getMaintenancesPreview&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;startTime&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Start time for Maintenance to return (ISO 8601)&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;dateTime&quot;
          },
          {
            &quot;name&quot;: &quot;isActive&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Active Maintenance&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;boolean&quot;
          },
          {
            &quot;name&quot;: &quot;products&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Filter by product&quot;,
            &quot;required&quot;: false
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;id&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;name&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;message&quot;: {
                    &quot;type&quot;: [
                      &quot;object&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;affectsAll&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;isCore&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;plannedStartTime&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;plannedEndTime&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;serviceKeys&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  },
                  &quot;instanceKeys&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  },
                  &quot;externalMaintenanceType&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;releaseType&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;substrate&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/maintenances/{id}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;maintenance&quot;,
      &quot;x-sequelize-model&quot;: &quot;Maintenance&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;maintenances&quot;,
      &quot;x-cdn-paramsIncludedInKey&quot;: [
        &quot;id&quot;
      ],
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;maintenances&quot;
        ],
        &quot;description&quot;: &quot;Returns a Maintenance based on Id.&quot;,
        &quot;operationId&quot;: &quot;getMaintenanceById&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;id&quot;,
            &quot;in&quot;: &quot;path&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Maintenance id&quot;,
            &quot;required&quot;: true
          },
          {
            &quot;name&quot;: &quot;locale&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Two-letter language code (ISO 639-1) &quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;id&quot;: {
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;message&quot;: {
                  &quot;type&quot;: [
                    &quot;object&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;externalId&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;name&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;externalMaintenanceType&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;releaseType&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;substrate&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;affectsAll&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;isCore&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;plannedStartTime&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;plannedEndTime&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;additionalInformation&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;serviceKeys&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                },
                &quot;instanceKeys&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                },
                &quot;MaintenanceImpacts&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;id&quot;: {
                        &quot;type&quot;: &quot;integer&quot;
                      },
                      &quot;startTime&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;endTime&quot;: {
                        &quot;type&quot;: [
                          &quot;string&quot;,
                          &quot;null&quot;
                        ]
                      },
                      &quot;type&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;systemAvailability&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;createdAt&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;updatedAt&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      }
                    }
                  }
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          },
          &quot;404&quot;: {
            &quot;description&quot;: &quot;Maintenance not found&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/maintenances/fields&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;maintenanceField&quot;,
      &quot;x-sequelize-model&quot;: &quot;Field&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;maintenances&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;maintenances&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of Maintenance fields.&quot;,
        &quot;operationId&quot;: &quot;getMaintenanceFields&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;locale&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;required&quot;: false,
          &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;key&quot;,
                  &quot;model&quot;
                ],
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;model&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/maintenances/eventTypes&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;maintenanceEventType&quot;,
      &quot;x-sequelize-model&quot;: &quot;MaintenanceEventType&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;maintenances&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;maintenances&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of maintenance impact type fields.&quot;,
        &quot;operationId&quot;: &quot;getMaintenanceEventTypes&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;locale&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;required&quot;: false,
          &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;isActive&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/generalMessages&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;generalMessage&quot;,
      &quot;x-sequelize-model&quot;: &quot;GeneralMessage&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;generalmessages&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;generalMessage&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of GeneralMessage objects.&quot;,
        &quot;operationId&quot;: &quot;getGeneralMessages&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;limit&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Limit for pagination&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;number&quot;,
            &quot;default&quot;: 10000,
            &quot;maximum&quot;: 10000
          },
          {
            &quot;name&quot;: &quot;offset&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Offset for pagination&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;number&quot;,
            &quot;default&quot;: 0
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;id&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;subject&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;body&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;startDate&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;format&quot;: &quot;date-time&quot;
                  },
                  &quot;endDate&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;externalId&quot;: {
                    &quot;type&quot;: [
                      &quot;string&quot;,
                      &quot;null&quot;
                    ]
                  },
                  &quot;isVisibleWhenClosed&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/generalMessages/{id}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;generalMessage&quot;,
      &quot;x-sequelize-model&quot;: &quot;GeneralMessage&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;generalmessages&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;generalMessage&quot;
        ],
        &quot;description&quot;: &quot;Returns a GeneralMessage based on Id.&quot;,
        &quot;operationId&quot;: &quot;getGeneralMessageById&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;id&quot;,
          &quot;in&quot;: &quot;path&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;GeneralMessage id&quot;,
          &quot;required&quot;: true
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;id&quot;: {
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;subject&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;body&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;startDate&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;format&quot;: &quot;date-time&quot;
                },
                &quot;endDate&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;externalId&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;isVisibleWhenClosed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                }
              }
            }
          },
          &quot;404&quot;: {
            &quot;description&quot;: &quot;GeneralMessage not found&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/informationalMessages/preview&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;generalMessage&quot;,
      &quot;x-sequelize-model&quot;: &quot;GeneralMessage&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;generalmessages&quot;,
      &quot;x-dataStoreClient-enabled&quot;: true,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;generalMessage&quot;
        ],
        &quot;description&quot;: &quot;Returns ongoing informational.&quot;,
        &quot;operationId&quot;: &quot;getInformationalMessagesPreview&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;limit&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Limit for pagination&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;number&quot;,
            &quot;default&quot;: 10000,
            &quot;maximum&quot;: 10000
          },
          {
            &quot;name&quot;: &quot;offset&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Offset for pagination&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;number&quot;,
            &quot;default&quot;: 0
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;id&quot;: {
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;subject&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;body&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;startDate&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;format&quot;: &quot;date-time&quot;
                },
                &quot;endDate&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;externalId&quot;: {
                  &quot;type&quot;: [
                    &quot;string&quot;,
                    &quot;null&quot;
                  ]
                },
                &quot;isVisibleWhenClosed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                }
              }
            }
          },
          &quot;404&quot;: {
            &quot;description&quot;: &quot;GeneralMessage not found&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/metricValues&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;metricValue&quot;,
      &quot;x-sequelize-model&quot;: &quot;MetricValue&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;metricvalues&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;metricValue&quot;
        ],
        &quot;description&quot;: &quot;Returns an array of MetricValue objects.&quot;,
        &quot;operationId&quot;: &quot;getMetricValue&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;startTime&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Start time for metricValue&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;dateTime&quot;
          },
          {
            &quot;name&quot;: &quot;endTime&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;End time for metricValue&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;,
            &quot;format&quot;: &quot;dateTime&quot;
          },
          {
            &quot;name&quot;: &quot;metricName&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Filter by Name of Metric&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;instanceKey&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Filter by Instances&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;metricValueName&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;value&quot;: {
                    &quot;type&quot;: &quot;number&quot;,
                    &quot;format&quot;: &quot;double&quot;
                  },
                  &quot;timestamp&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;instanceKey&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/metricValues/{id}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;metricValue&quot;,
      &quot;x-sequelize-model&quot;: &quot;MetricValue&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;metricValues&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;metricValue&quot;
        ],
        &quot;description&quot;: &quot;Returns a MetricValue based on Id.&quot;,
        &quot;operationId&quot;: &quot;getMetricValueById&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;id&quot;,
          &quot;in&quot;: &quot;path&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;MetricValue Id&quot;,
          &quot;required&quot;: true
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;metricValueName&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;value&quot;: {
                  &quot;type&quot;: &quot;number&quot;,
                  &quot;format&quot;: &quot;double&quot;
                },
                &quot;timestamp&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;instanceKey&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          },
          &quot;404&quot;: {
            &quot;description&quot;: &quot;MetricValue not found&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/locales&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;locale&quot;,
      &quot;x-sequelize-model&quot;: &quot;Locale&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;locales&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;locales&quot;
        ],
        &quot;description&quot;: &quot;Return all locales&quot;,
        &quot;operationId&quot;: &quot;getLocales&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;locale&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;required&quot;: false,
          &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;name&quot;,
                  &quot;code&quot;
                ],
                &quot;properties&quot;: {
                  &quot;id&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;name&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;code&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/services&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;service&quot;,
      &quot;x-sequelize-model&quot;: &quot;Service&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;services&quot;,
      &quot;x-cdn-relatedKeys&quot;: [
        &quot;incidents&quot;,
        &quot;maintenances&quot;,
        &quot;products&quot;
      ],
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;services&quot;
        ],
        &quot;description&quot;: &quot;Return all services&quot;,
        &quot;operationId&quot;: &quot;getServices&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;locale&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;required&quot;: false,
          &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 4098
                  },
                  &quot;order&quot;: {
                    &quot;type&quot;: [
                      &quot;integer&quot;,
                      &quot;null&quot;
                    ],
                    &quot;description&quot;: &quot;Order Displayed on the status Timeline.&quot;
                  },
                  &quot;isCore&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;,
                    &quot;description&quot;: &quot;Sets if service is a \&quot;core service\&quot; or not.&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/instances&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;instance&quot;,
      &quot;x-sequelize-model&quot;: &quot;Instance&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;instances&quot;,
      &quot;x-dataStoreClient-enabled&quot;: true,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;instances&quot;
        ],
        &quot;description&quot;: &quot;Return all instances&quot;,
        &quot;operationId&quot;: &quot;getInstances&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;sort&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Sort by property&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;order&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Ordering of property&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;products&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Filter by parent product&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;tags&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;integer&quot;
            },
            &quot;description&quot;: &quot;Filter by tag ids&quot;,
            &quot;required&quot;: false
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;$ref&quot;: &quot;#/definitions/Instance&quot;
              }
            }
          }
        }
      }
    },
    &quot;/instances/status&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;instance&quot;,
      &quot;x-sequelize-model&quot;: &quot;Instance&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;instances&quot;,
      &quot;x-dataStoreClient-enabled&quot;: true,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;instances&quot;
        ],
        &quot;description&quot;: &quot;This route is no longer supported.\nUse /instances/status/preview for overall current status and currently ongoing incidents, maintenances, and general messages.\nUse /instances/{key}/status for current status and recent history of incidents, maintenances, and general messages for specific instances.\n&quot;,
        &quot;operationId&quot;: &quot;getInstanceStatuses&quot;,
        &quot;deprecated&quot;: true,
        &quot;responses&quot;: {
          &quot;400&quot;: {
            &quot;description&quot;: &quot;Route no longer exists&quot;
          }
        }
      }
    },
    &quot;/instances/status/preview&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;instance&quot;,
      &quot;x-sequelize-model&quot;: &quot;Instance&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;instances&quot;,
      &quot;x-dataStoreClient-enabled&quot;: true,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;instances&quot;
        ],
        &quot;description&quot;: &quot;Return all instances and associated incidents, maintenances, and general messages.\nFor each instance returns a state enum indicating the most\nsevere ongoing event, and if it affects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE\n&quot;,
        &quot;operationId&quot;: &quot;getInstanceStatusPreview&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;products&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Filter by parent product&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;childProducts&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;description&quot;: &quot;Include nested products. The products parameter must be set.&quot;,
            &quot;default&quot;: false,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;locale&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;required&quot;: false,
            &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;key&quot;
                ],
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;location&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;environment&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseVersion&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseNumber&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;maintenanceWindow&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;status&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;A top level status of the instance. If multiple events are ongoing, then provides the most severe.&quot;,
                    &quot;maxLength&quot;: 255,
                    &quot;enum&quot;: [
                      &quot;OK&quot;,
                      &quot;MAJOR_INCIDENT_CORE&quot;,
                      &quot;MINOR_INCIDENT_CORE&quot;,
                      &quot;MAINTENANCE_CORE&quot;,
                      &quot;MAJOR_INCIDENT_NONCORE&quot;,
                      &quot;MINOR_INCIDENT_NONCORE&quot;,
                      &quot;MAINTENANCE_NONCORE&quot;
                    ]
                  },
                  &quot;Incidents&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;required&quot;: [
                        &quot;id&quot;
                      ],
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;IncidentImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;startTime&quot;,
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;serviceIssue&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endUserImpact&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;IncidentEvents&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;message&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;Maintenances&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;name&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalMaintenanceType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;releaseType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;substrate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;plannedStartTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;plannedEndTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;MaintenanceImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;systemAvailability&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;GeneralMessages&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;subject&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;body&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;startDate&quot;: {
                          &quot;type&quot;: &quot;string&quot;,
                          &quot;format&quot;: &quot;date-time&quot;
                        },
                        &quot;endDate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;isVisibleWhenClosed&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/instances/{key}/status/preview&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;instance&quot;,
      &quot;x-sequelize-model&quot;: &quot;Instance&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;instances&quot;,
      &quot;x-dataStoreClient-enabled&quot;: true,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;instances&quot;
        ],
        &quot;description&quot;: &quot;Return an instance with associated incidents, maintenances, and general messages.\nFor a given instance, returns a state enum indicating the most\nsevere ongoing event, and if it affects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE\n&quot;,
        &quot;operationId&quot;: &quot;getInstanceStatusPreviewByKey&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;key&quot;,
          &quot;in&quot;: &quot;path&quot;,
          &quot;description&quot;: &quot;Instance Key&quot;,
          &quot;required&quot;: true,
          &quot;type&quot;: &quot;string&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;key&quot;
                ],
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;location&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;environment&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseVersion&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseNumber&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;maintenanceWindow&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;status&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;A top level status of the instance. If multiple events are ongoing, then provides the most severe.&quot;,
                    &quot;maxLength&quot;: 255,
                    &quot;enum&quot;: [
                      &quot;OK&quot;,
                      &quot;MAJOR_INCIDENT_CORE&quot;,
                      &quot;MINOR_INCIDENT_CORE&quot;,
                      &quot;MAINTENANCE_CORE&quot;,
                      &quot;MAJOR_INCIDENT_NONCORE&quot;,
                      &quot;MINOR_INCIDENT_NONCORE&quot;,
                      &quot;MAINTENANCE_NONCORE&quot;
                    ]
                  },
                  &quot;Incidents&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;required&quot;: [
                        &quot;id&quot;
                      ],
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;IncidentImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;startTime&quot;,
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;serviceIssue&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endUserImpact&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;IncidentEvents&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;message&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;Maintenances&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;name&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalMaintenanceType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;releaseType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;substrate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;plannedStartTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;plannedEndTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;MaintenanceImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;systemAvailability&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;GeneralMessages&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;subject&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;body&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;startDate&quot;: {
                          &quot;type&quot;: &quot;string&quot;,
                          &quot;format&quot;: &quot;date-time&quot;
                        },
                        &quot;endDate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;isVisibleWhenClosed&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/instances/{key}/status&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;instance&quot;,
      &quot;x-sequelize-model&quot;: &quot;Instance&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;instances&quot;,
      &quot;x-dataStoreClient-enabled&quot;: true,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;instances&quot;
        ],
        &quot;description&quot;: &quot;Return by instance with associated incidents, maintenances, and general messages.\nReturns a state enum indicating the most\nsevere ongoing event, and if it affects a core service.\n\nStatus Enums:\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE\n&quot;,
        &quot;operationId&quot;: &quot;getInstanceStatusbyKey&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;key&quot;,
            &quot;in&quot;: &quot;path&quot;,
            &quot;description&quot;: &quot;Instance Key&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;productKey&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Filter by parent product&quot;,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;childProducts&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;description&quot;: &quot;Include nested products. The productKey parameter must be set.&quot;,
            &quot;default&quot;: false,
            &quot;required&quot;: false
          },
          {
            &quot;name&quot;: &quot;locale&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;required&quot;: false,
            &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;key&quot;
                ],
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;location&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;environment&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseVersion&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseNumber&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;maintenanceWindow&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;status&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;A top level status of the instance. If multiple events are ongoing, then provides the most severe.&quot;,
                    &quot;maxLength&quot;: 255,
                    &quot;enum&quot;: [
                      &quot;OK&quot;,
                      &quot;MAJOR_INCIDENT_CORE&quot;,
                      &quot;MINOR_INCIDENT_CORE&quot;,
                      &quot;MAINTENANCE_CORE&quot;,
                      &quot;MAJOR_INCIDENT_NONCORE&quot;,
                      &quot;MINOR_INCIDENT_NONCORE&quot;,
                      &quot;MAINTENANCE_NONCORE&quot;
                    ]
                  },
                  &quot;Incidents&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;required&quot;: [
                        &quot;id&quot;
                      ],
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;IncidentImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;startTime&quot;,
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;serviceIssue&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endUserImpact&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;IncidentEvents&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;message&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;Maintenances&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;name&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalMaintenanceType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;releaseType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;substrate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;plannedStartTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;plannedEndTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;MaintenanceImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;systemAvailability&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;GeneralMessages&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;subject&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;body&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;startDate&quot;: {
                          &quot;type&quot;: &quot;string&quot;,
                          &quot;format&quot;: &quot;date-time&quot;
                        },
                        &quot;endDate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;isVisibleWhenClosed&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/instanceAliases/{key}/status&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;instanceAlias&quot;,
      &quot;x-sequelize-model&quot;: &quot;InstanceAlias&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;instancealiases&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;instances&quot;
        ],
        &quot;description&quot;: &quot;Return an instance with associated incidents, maintenances, and general messages.\nReturns a state enum indicating the most\nsevere ongoing event, and if it effects a core service.\n\nStatus Enums:\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE\n&quot;,
        &quot;operationId&quot;: &quot;getInstanceStatusbyAlias&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;key&quot;,
          &quot;in&quot;: &quot;path&quot;,
          &quot;description&quot;: &quot;Instance Key&quot;,
          &quot;required&quot;: true,
          &quot;type&quot;: &quot;string&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;key&quot;
                ],
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;location&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;environment&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseVersion&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseNumber&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;maintenanceWindow&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;status&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;A top level status of the instance. If multiple events are ongoing, then provides the most severe.&quot;,
                    &quot;maxLength&quot;: 255,
                    &quot;enum&quot;: [
                      &quot;OK&quot;,
                      &quot;MAJOR_INCIDENT_CORE&quot;,
                      &quot;MINOR_INCIDENT_CORE&quot;,
                      &quot;MAINTENANCE_CORE&quot;,
                      &quot;MAJOR_INCIDENT_NONCORE&quot;,
                      &quot;MINOR_INCIDENT_NONCORE&quot;,
                      &quot;MAINTENANCE_NONCORE&quot;
                    ]
                  },
                  &quot;Incidents&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;required&quot;: [
                        &quot;id&quot;
                      ],
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;IncidentImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;startTime&quot;,
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;serviceIssue&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endUserImpact&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;IncidentEvents&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;message&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;Maintenances&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;name&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalMaintenanceType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;releaseType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;substrate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;plannedStartTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;plannedEndTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;MaintenanceImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;systemAvailability&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;GeneralMessages&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;subject&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;body&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;startDate&quot;: {
                          &quot;type&quot;: &quot;string&quot;,
                          &quot;format&quot;: &quot;date-time&quot;
                        },
                        &quot;endDate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;isVisibleWhenClosed&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/instanceAliases/{key}/status/preview&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;instanceAlias&quot;,
      &quot;x-sequelize-model&quot;: &quot;InstanceAlias&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;instancealiases&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;instances&quot;
        ],
        &quot;description&quot;: &quot;Return an instance with ongoing incidents, maintenances, and general messages.\nFor a given instance, returns a state enum indicating the most\nsevere ongoing event, and if it affects a core service.\n\nStatus Enums\n* OK\n* MAJOR_INCIDENT_CORE\n* MINOR_INCIDENT_CORE\n* MAINTENANCE_CORE\n* MAJOR_INCIDENT_NONCORE\n* MINOR_INCIDENT_NONCORE\n* MAINTENANCE_NONCORE\n&quot;,
        &quot;operationId&quot;: &quot;getInstanceStatusPreviewByAlias&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;key&quot;,
          &quot;in&quot;: &quot;path&quot;,
          &quot;description&quot;: &quot;Instance Key&quot;,
          &quot;required&quot;: true,
          &quot;type&quot;: &quot;string&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;key&quot;
                ],
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;location&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;environment&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseVersion&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;releaseNumber&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;maintenanceWindow&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;status&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;A top level status of the instance. If multiple events are ongoing, then provides the most severe.&quot;,
                    &quot;maxLength&quot;: 255,
                    &quot;enum&quot;: [
                      &quot;OK&quot;,
                      &quot;MAJOR_INCIDENT_CORE&quot;,
                      &quot;MINOR_INCIDENT_CORE&quot;,
                      &quot;MAINTENANCE_CORE&quot;,
                      &quot;MAJOR_INCIDENT_NONCORE&quot;,
                      &quot;MINOR_INCIDENT_NONCORE&quot;,
                      &quot;MAINTENANCE_NONCORE&quot;
                    ]
                  },
                  &quot;Incidents&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;required&quot;: [
                        &quot;id&quot;
                      ],
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;IncidentImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;startTime&quot;,
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;serviceIssue&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endUserImpact&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;IncidentEvents&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;required&quot;: [
                              &quot;type&quot;
                            ],
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;message&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;Maintenances&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;message&quot;: {
                          &quot;type&quot;: [
                            &quot;object&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;name&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalMaintenanceType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;releaseType&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;substrate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;affectsAll&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;isCore&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;plannedStartTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;plannedEndTime&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;additionalInformation&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;serviceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;instanceKeys&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;MaintenanceImpacts&quot;: {
                          &quot;type&quot;: &quot;array&quot;,
                          &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;properties&quot;: {
                              &quot;id&quot;: {
                                &quot;type&quot;: &quot;integer&quot;
                              },
                              &quot;startTime&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;endTime&quot;: {
                                &quot;type&quot;: [
                                  &quot;string&quot;,
                                  &quot;null&quot;
                                ]
                              },
                              &quot;type&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;systemAvailability&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;createdAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              },
                              &quot;updatedAt&quot;: {
                                &quot;type&quot;: &quot;string&quot;
                              }
                            }
                          }
                        },
                        &quot;createdAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;updatedAt&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        }
                      }
                    }
                  },
                  &quot;GeneralMessages&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;id&quot;: {
                          &quot;type&quot;: &quot;integer&quot;
                        },
                        &quot;subject&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;body&quot;: {
                          &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;startDate&quot;: {
                          &quot;type&quot;: &quot;string&quot;,
                          &quot;format&quot;: &quot;date-time&quot;
                        },
                        &quot;endDate&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;externalId&quot;: {
                          &quot;type&quot;: [
                            &quot;string&quot;,
                            &quot;null&quot;
                          ]
                        },
                        &quot;isVisibleWhenClosed&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/instanceAliases/{key}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;instanceAlias&quot;,
      &quot;x-sequelize-model&quot;: &quot;InstanceAlias&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;instancealiases&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;instances&quot;
        ],
        &quot;description&quot;: &quot;Get Instance Alias&quot;,
        &quot;operationId&quot;: &quot;getInstanceAliasByKey&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;key&quot;,
          &quot;in&quot;: &quot;path&quot;,
          &quot;description&quot;: &quot;Instance Alias Key&quot;,
          &quot;required&quot;: true,
          &quot;type&quot;: &quot;string&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;key&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;maxLength&quot;: 255
                },
                &quot;instanceKey&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;maxLength&quot;: 255
                },
                &quot;aliasType&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;maxLength&quot;: 255
                }
              }
            }
          }
        }
      }
    },
    &quot;/products&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;product&quot;,
      &quot;x-sequelize-model&quot;: &quot;Product&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;products&quot;,
      &quot;x-cdn-relatedKeys&quot;: [
        &quot;incidents&quot;,
        &quot;maintenances&quot;
      ],
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;products&quot;
        ],
        &quot;description&quot;: &quot;Return all catergories&quot;,
        &quot;operationId&quot;: &quot;getProducts&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;groupByCategory&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Returns the products grouped by product category&quot;,
          &quot;required&quot;: false
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;parentId&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;parentName&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;order&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;path&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;public&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;,
                    &quot;default&quot;: true
                  },
                  &quot;isActive&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;,
                    &quot;default&quot;: true
                  },
                  &quot;name&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;altDisplayName&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;url&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;incidentCount&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;maintenanceCount&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;productCategoryId&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/products/{key}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;product&quot;,
      &quot;x-sequelize-model&quot;: &quot;Product&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;products&quot;,
      &quot;x-cdn-relatedKeys&quot;: [
        &quot;incidents&quot;,
        &quot;maintenances&quot;
      ],
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;products&quot;
        ],
        &quot;description&quot;: &quot;Returns a product by id.&quot;,
        &quot;operationId&quot;: &quot;getProductById&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;key&quot;,
          &quot;in&quot;: &quot;path&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Product Key&quot;,
          &quot;required&quot;: true
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;key&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;maxLength&quot;: 255
                },
                &quot;parentId&quot;: {
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;parentName&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;order&quot;: {
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;path&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;public&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;default&quot;: true
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;default&quot;: true
                },
                &quot;name&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;altDisplayName&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;url&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;incidentCount&quot;: {
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;maintenanceCount&quot;: {
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;productCategoryId&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          },
          &quot;404&quot;: {
            &quot;description&quot;: &quot;Product not found&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/products/categories&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;product&quot;,
      &quot;x-sequelize-model&quot;: &quot;ProductCategory&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;productCategories&quot;,
      &quot;x-cdn-relatedKeys&quot;: [
        &quot;products&quot;
      ],
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;products&quot;
        ],
        &quot;description&quot;: &quot;Return all product categories&quot;,
        &quot;operationId&quot;: &quot;getProductCategories&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;id&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;categoryOrder&quot;: {
                    &quot;type&quot;: &quot;integer&quot;
                  },
                  &quot;name&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;/products/categories/{id}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;product&quot;,
      &quot;x-sequelize-model&quot;: &quot;ProductCategory&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;productCategories&quot;,
      &quot;x-cdn-relatedKeys&quot;: [
        &quot;products&quot;
      ],
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;products&quot;
        ],
        &quot;description&quot;: &quot;Returns a product category by id.&quot;,
        &quot;operationId&quot;: &quot;getProductCategoryById&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;id&quot;,
          &quot;in&quot;: &quot;path&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Product Category Id&quot;,
          &quot;required&quot;: true
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;id&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;categoryOrder&quot;: {
                  &quot;type&quot;: &quot;integer&quot;
                },
                &quot;name&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          },
          &quot;404&quot;: {
            &quot;description&quot;: &quot;Product Category not found&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/subscribe&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;subscribe&quot;,
      &quot;x-sequelize-model&quot;: &quot;Subscriber&quot;,
      &quot;post&quot;: {
        &quot;operationId&quot;: &quot;subscribe&quot;,
        &quot;tags&quot;: [
          &quot;subscribe&quot;
        ],
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;X-Send-Notification&quot;,
            &quot;in&quot;: &quot;header&quot;,
            &quot;description&quot;: &quot;Notify subscribers about event.\nAutomatically set using\n&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;required&quot;: false,
            &quot;default&quot;: &quot;send&quot;
          },
          {
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Subscriber and Subscription Information&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;default&quot;: true
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;default&quot;: false
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;default&quot;: false
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;default&quot;: false
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;,
                  &quot;default&quot;: &quot;en&quot;
                },
                &quot;subscriptions&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;all&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
                    },
                    &quot;subType&quot;: {
                      &quot;type&quot;: &quot;string&quot;,
                      &quot;default&quot;: &quot;email&quot;
                    },
                    &quot;instances&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;additionalProperties&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;properties&quot;: {
                          &quot;all&quot;: {
                            &quot;type&quot;: &quot;boolean&quot;
                          },
                          &quot;services&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;additionalProperties&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;properties&quot;: {
                                &quot;severities&quot;: {
                                  &quot;type&quot;: &quot;object&quot;,
                                  &quot;properties&quot;: {
                                    &quot;major&quot;: {
                                      &quot;type&quot;: &quot;boolean&quot;
                                    },
                                    &quot;minor&quot;: {
                                      &quot;type&quot;: &quot;boolean&quot;
                                    },
                                    &quot;maintenances&quot;: {
                                      &quot;type&quot;: &quot;boolean&quot;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    &quot;products&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;additionalProperties&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;properties&quot;: {
                          &quot;major&quot;: {
                            &quot;type&quot;: &quot;boolean&quot;
                          },
                          &quot;minor&quot;: {
                            &quot;type&quot;: &quot;boolean&quot;
                          },
                          &quot;maintenances&quot;: {
                            &quot;type&quot;: &quot;boolean&quot;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;New subscribers&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/subscribers&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;subscriber&quot;,
      &quot;x-sequelize-model&quot;: &quot;Subscriber&quot;,
      &quot;get&quot;: {
        &quot;operationId&quot;: &quot;getSubscriberWithToken&quot;,
        &quot;tags&quot;: [
          &quot;subscribers&quot;
        ],
        &quot;summary&quot;: &quot;Retrieve Subscriber&quot;,
        &quot;description&quot;: &quot;Returns subscriber and subscription using token\n&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;normalize&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;default&quot;: false
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      },
      &quot;patch&quot;: {
        &quot;operationId&quot;: &quot;patchSubscriberWithToken&quot;,
        &quot;tags&quot;: [
          &quot;subscribers&quot;
        ],
        &quot;summary&quot;: &quot;Update Subscriber&quot;,
        &quot;description&quot;: &quot;Update subscriber using token\n&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;X-Send-Notification&quot;,
            &quot;in&quot;: &quot;header&quot;,
            &quot;description&quot;: &quot;Notify subscribers about event.\nAutomatically set using\n&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;required&quot;: false,
            &quot;default&quot;: &quot;send&quot;
          },
          {
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Updated Subscriber&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/subscribers/subscriptions/{id}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;subscriber&quot;,
      &quot;x-sequelize-model&quot;: &quot;Subscriber&quot;,
      &quot;post&quot;: {
        &quot;operationId&quot;: &quot;postSubscriptionWithToken&quot;,
        &quot;tags&quot;: [
          &quot;subscribers&quot;
        ],
        &quot;summary&quot;: &quot;Creates a Subscription for the User.&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;id&quot;,
            &quot;in&quot;: &quot;path&quot;,
            &quot;description&quot;: &quot;Subscription ID&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Updated Subscriber&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;type&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;INSTANCE&quot;,
                    &quot;PRODUCT&quot;,
                    &quot;ALL&quot;
                  ]
                },
                &quot;instanceKey&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;subType&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;email&quot;,
                    &quot;sms&quot;
                  ]
                },
                &quot;allInstances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;allNotifications&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;major&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;minor&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;maintenances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;ServiceSubscriptions&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;serviceKey&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;major&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;minor&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;maintenances&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      },
      &quot;patch&quot;: {
        &quot;operationId&quot;: &quot;patchSubscriptionWithToken&quot;,
        &quot;tags&quot;: [
          &quot;subscribers&quot;
        ],
        &quot;summary&quot;: &quot;Updates a Subscription for the User.&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;id&quot;,
            &quot;in&quot;: &quot;path&quot;,
            &quot;description&quot;: &quot;Subscription ID&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Updated Subscriber&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;type&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;INSTANCE&quot;,
                    &quot;PRODUCT&quot;,
                    &quot;ALL&quot;
                  ]
                },
                &quot;instanceKey&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;subType&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;email&quot;,
                    &quot;sms&quot;
                  ]
                },
                &quot;allInstances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;allNotifications&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;major&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;minor&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;maintenances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;ServiceSubscriptions&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;serviceKey&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;major&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;minor&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;maintenances&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      },
      &quot;delete&quot;: {
        &quot;operationId&quot;: &quot;deleteSubscriptionWithToken&quot;,
        &quot;tags&quot;: [
          &quot;subscribers&quot;
        ],
        &quot;summary&quot;: &quot;Deletes a Subscription for the User.&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;id&quot;,
            &quot;in&quot;: &quot;path&quot;,
            &quot;description&quot;: &quot;Subscription ID&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Updated Subscriber&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;type&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;INSTANCE&quot;,
                    &quot;PRODUCT&quot;,
                    &quot;ALL&quot;
                  ]
                },
                &quot;instanceKey&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;subType&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;email&quot;,
                    &quot;sms&quot;
                  ]
                },
                &quot;allInstances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;allNotifications&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;major&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;minor&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;maintenances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;ServiceSubscriptions&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;serviceKey&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;major&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;minor&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;maintenances&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/subscribers/subscriptions&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;subscriber&quot;,
      &quot;x-sequelize-model&quot;: &quot;Subscriber&quot;,
      &quot;post&quot;: {
        &quot;operationId&quot;: &quot;postSubscriptionWithToken&quot;,
        &quot;tags&quot;: [
          &quot;subscribers&quot;
        ],
        &quot;summary&quot;: &quot;Creates a Subscription for the User.&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Updated Subscriber&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;type&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;INSTANCE&quot;,
                    &quot;PRODUCT&quot;,
                    &quot;ALL&quot;
                  ]
                },
                &quot;instanceKey&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;subType&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;email&quot;,
                    &quot;sms&quot;
                  ]
                },
                &quot;allInstances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;allNotifications&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;major&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;minor&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;maintenances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;ServiceSubscriptions&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;serviceKey&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;major&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;minor&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;maintenances&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      },
      &quot;patch&quot;: {
        &quot;operationId&quot;: &quot;patchSubscriptionWithToken&quot;,
        &quot;tags&quot;: [
          &quot;subscribers&quot;
        ],
        &quot;summary&quot;: &quot;Updates a Subscription for the User.&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Updated Subscriber&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;type&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;INSTANCE&quot;,
                    &quot;PRODUCT&quot;,
                    &quot;ALL&quot;
                  ]
                },
                &quot;instanceKey&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;subType&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;email&quot;,
                    &quot;sms&quot;
                  ]
                },
                &quot;allInstances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;allNotifications&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;major&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;minor&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;maintenances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;ServiceSubscriptions&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;serviceKey&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;major&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;minor&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;maintenances&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      },
      &quot;delete&quot;: {
        &quot;operationId&quot;: &quot;deleteSubscriptionWithToken&quot;,
        &quot;tags&quot;: [
          &quot;subscribers&quot;
        ],
        &quot;summary&quot;: &quot;Deletes a Subscription for the User.&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: true,
            &quot;type&quot;: &quot;string&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Updated Subscriber&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;type&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;INSTANCE&quot;,
                    &quot;PRODUCT&quot;,
                    &quot;ALL&quot;
                  ]
                },
                &quot;instanceKey&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;subType&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;enum&quot;: [
                    &quot;email&quot;,
                    &quot;sms&quot;
                  ]
                },
                &quot;allInstances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;allNotifications&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;major&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;minor&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;maintenances&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;
                },
                &quot;ServiceSubscriptions&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;serviceKey&quot;: {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      &quot;major&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;minor&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;maintenances&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/unsubscribe&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;unsubscribe&quot;,
      &quot;x-sequelize-model&quot;: &quot;Subscriber&quot;,
      &quot;patch&quot;: {
        &quot;operationId&quot;: &quot;unsubscribe&quot;,
        &quot;tags&quot;: [
          &quot;subscribe&quot;
        ],
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Unsubscribe body&quot;,
            &quot;required&quot;: false,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;token&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Unsubscribe JWT Token&quot;
                }
              }
            }
          },
          {
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Updated Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      },
      &quot;post&quot;: {
        &quot;operationId&quot;: &quot;unsubscribe&quot;,
        &quot;tags&quot;: [
          &quot;subscribe&quot;
        ],
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Unsubscribe body&quot;,
            &quot;required&quot;: false,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;token&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Unsubscribe JWT Token&quot;
                }
              }
            }
          },
          {
            &quot;name&quot;: &quot;token&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;description&quot;: &quot;Subscriber Token&quot;,
            &quot;required&quot;: false,
            &quot;type&quot;: &quot;string&quot;
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Updated Subscriber&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email address of subscriber&quot;
                },
                &quot;locale&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Locale for alerts&quot;
                },
                &quot;subscription&quot;: {
                  &quot;type&quot;: &quot;array&quot;,
                  &quot;items&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                      &quot;all&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;
                      },
                      &quot;instances&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;all&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;,
                              &quot;enum&quot;: [
                                &quot;email&quot;,
                                &quot;sms&quot;
                              ]
                            },
                            &quot;services&quot;: {
                              &quot;type&quot;: &quot;object&quot;,
                              &quot;additionalProperties&quot;: {
                                &quot;type&quot;: &quot;object&quot;,
                                &quot;properties&quot;: {
                                  &quot;severities&quot;: {
                                    &quot;type&quot;: &quot;object&quot;,
                                    &quot;properties&quot;: {
                                      &quot;major&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;minor&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      },
                                      &quot;maintenances&quot;: {
                                        &quot;type&quot;: &quot;boolean&quot;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      &quot;products&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;additionalProperties&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;subType&quot;: {
                              &quot;type&quot;: &quot;string&quot;
                            },
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;description&quot;: &quot;List of Subscriptions&quot;
                },
                &quot;isActive&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber Status&quot;
                },
                &quot;generalMessageEmailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;generalMessageSMSSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
                },
                &quot;createdAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;updatedAt&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;emailSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
                },
                &quot;smsSubscribed&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
                },
                &quot;emailVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Email verified by the user&quot;
                },
                &quot;mobileNumberVerified&quot;: {
                  &quot;type&quot;: &quot;boolean&quot;,
                  &quot;description&quot;: &quot;Mobile number verified or not&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Mobile number&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/login&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;login&quot;,
      &quot;x-sequelize-model&quot;: &quot;Subscriber&quot;,
      &quot;post&quot;: {
        &quot;operationId&quot;: &quot;login&quot;,
        &quot;tags&quot;: [
          &quot;subscribe&quot;
        ],
        &quot;description&quot;: &quot;Requests to send a login link to the email address&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;X-Send-Notification&quot;,
            &quot;in&quot;: &quot;header&quot;,
            &quot;description&quot;: &quot;Notify subscribers about event.\nAutomatically set using\n&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;required&quot;: false,
            &quot;default&quot;: &quot;send&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Login Body&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;required&quot;: [
                &quot;emailAddress&quot;
              ],
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;format&quot;: &quot;email&quot;,
                  &quot;description&quot;: &quot;Email Address to Send Link to&quot;
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Login Action&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;required&quot;: [
                &quot;emailAddress&quot;
              ],
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;format&quot;: &quot;email&quot;,
                  &quot;description&quot;: &quot;Email Address to Send Link to&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/addNumber&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;login&quot;,
      &quot;x-sequelize-model&quot;: &quot;Subscriber&quot;,
      &quot;post&quot;: {
        &quot;operationId&quot;: &quot;postNumberWithToken&quot;,
        &quot;tags&quot;: [
          &quot;subscribe&quot;
        ],
        &quot;description&quot;: &quot;Requests to send a verification code&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;X-Send-Notification&quot;,
            &quot;in&quot;: &quot;header&quot;,
            &quot;description&quot;: &quot;Notify subscribers about event.&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;required&quot;: false,
            &quot;default&quot;: &quot;send&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Login Body&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email Address to Send Link to&quot;
                },
                &quot;countryName&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Login Action&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email Address to Send Link to&quot;
                },
                &quot;countryName&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/verifyUser&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;login&quot;,
      &quot;x-sequelize-model&quot;: &quot;Subscriber&quot;,
      &quot;post&quot;: {
        &quot;operationId&quot;: &quot;verifyUser&quot;,
        &quot;tags&quot;: [
          &quot;subscribe&quot;
        ],
        &quot;description&quot;: &quot;Requests to send a login link to the email address&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;X-Send-Notification&quot;,
            &quot;in&quot;: &quot;header&quot;,
            &quot;description&quot;: &quot;Notify subscribers about event.\nAutomatically set using\n&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;required&quot;: false,
            &quot;default&quot;: &quot;send&quot;
          },
          {
            &quot;name&quot;: &quot;body&quot;,
            &quot;in&quot;: &quot;body&quot;,
            &quot;description&quot;: &quot;Login Body&quot;,
            &quot;required&quot;: true,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email Address to Send Link to&quot;
                },
                &quot;countryName&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Login Action&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;emailAddress&quot;: {
                  &quot;type&quot;: &quot;string&quot;,
                  &quot;description&quot;: &quot;Email Address to Send Link to&quot;
                },
                &quot;countryName&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;phoneNumber&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/logout&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;logout&quot;,
      &quot;x-sequelize-model&quot;: &quot;Subscriber&quot;,
      &quot;get&quot;: {
        &quot;operationId&quot;: &quot;logout&quot;,
        &quot;tags&quot;: [
          &quot;subscribe&quot;
        ],
        &quot;description&quot;: &quot;Logout authenticated user.&quot;,
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;token&quot;,
          &quot;in&quot;: &quot;query&quot;,
          &quot;description&quot;: &quot;Subscriber Token&quot;,
          &quot;required&quot;: true,
          &quot;type&quot;: &quot;string&quot;
        }],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/search/{key}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;search&quot;,
      &quot;x-sequelize-model&quot;: &quot;Product&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;search&quot;
        ],
        &quot;parameters&quot;: [{
          &quot;name&quot;: &quot;key&quot;,
          &quot;in&quot;: &quot;path&quot;,
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Search Key&quot;,
          &quot;required&quot;: true
        }],
        &quot;description&quot;: &quot;Return all search results&quot;,
        &quot;operationId&quot;: &quot;getSearch&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;
              }
            }
          },
          &quot;404&quot;: {
            &quot;description&quot;: &quot;Search not found&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/countryCodes&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;countryCodes&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;countryCodes&quot;
        ],
        &quot;operationId&quot;: &quot;getCountryCodes&quot;,
        &quot;summary&quot;: &quot;Retrieve countries and their codes&quot;,
        &quot;description&quot;: &quot;Returns countries with codes&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;name&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;code&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  }
                }
              }
            }
          },
          &quot;default&quot;: {
            &quot;description&quot;: &quot;Unexpected error&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;message&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              }
            }
          }
        }
      }
    },
    &quot;/swagger&quot;: {
      &quot;x-swagger-pipe&quot;: &quot;swagger_raw&quot;
    },
    &quot;/tags&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;tag&quot;,
      &quot;x-sequelize-model&quot;: &quot;Tag&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;tags&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;tags&quot;
        ],
        &quot;description&quot;: &quot;Return all the tags&quot;,
        &quot;operationId&quot;: &quot;getTags&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;$ref&quot;: &quot;#/definitions/Tag&quot;
              }
            }
          }
        }
      }
    },
    &quot;/tags/instance/{instanceKey}&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;tag&quot;,
      &quot;x-sequelize-model&quot;: &quot;Tag&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;tags&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;tags&quot;
        ],
        &quot;description&quot;: &quot;Return all the tags for a given Instance Key&quot;,
        &quot;operationId&quot;: &quot;getTagsByInstanceKey&quot;,
        &quot;parameters&quot;: [{
            &quot;name&quot;: &quot;instanceKey&quot;,
            &quot;in&quot;: &quot;path&quot;,
            &quot;type&quot;: &quot;string&quot;,
            &quot;description&quot;: &quot;Instance Key&quot;,
            &quot;required&quot;: true
          },
          {
            &quot;name&quot;: &quot;instances&quot;,
            &quot;in&quot;: &quot;query&quot;,
            &quot;type&quot;: &quot;boolean&quot;,
            &quot;default&quot;: false,
            &quot;required&quot;: false
          }
        ],
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;$ref&quot;: &quot;#/definitions/Tag&quot;
              }
            }
          }
        }
      }
    },
    &quot;/tagTypes&quot;: {
      &quot;x-swagger-router-controller&quot;: &quot;tagType&quot;,
      &quot;x-sequelize-model&quot;: &quot;TagType&quot;,
      &quot;x-cdn-enabled&quot;: true,
      &quot;x-cdn-defaultKey&quot;: &quot;tagtypes&quot;,
      &quot;get&quot;: {
        &quot;tags&quot;: [
          &quot;tags&quot;
        ],
        &quot;description&quot;: &quot;Return all the tag types&quot;,
        &quot;operationId&quot;: &quot;getTagTypes&quot;,
        &quot;responses&quot;: {
          &quot;200&quot;: {
            &quot;description&quot;: &quot;Success&quot;,
            &quot;schema&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;required&quot;: [
                  &quot;key&quot;
                ],
                &quot;properties&quot;: {
                  &quot;key&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;maxLength&quot;: 255
                  },
                  &quot;Tags&quot;: {
                    &quot;type&quot;: &quot;array&quot;,
                    &quot;items&quot;: {
                      &quot;$ref&quot;: &quot;#/definitions/Tag&quot;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  &quot;definitions&quot;: {
    &quot;Incident&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;id&quot;
      ],
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;message&quot;: {
          &quot;type&quot;: [
            &quot;object&quot;,
            &quot;null&quot;
          ]
        },
        &quot;externalId&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;affectsAll&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;isCore&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;additionalInformation&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;serviceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;instanceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;IncidentImpacts&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;required&quot;: [
              &quot;startTime&quot;,
              &quot;type&quot;
            ],
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;startTime&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;endTime&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;serviceIssue&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;endUserImpact&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;type&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;createdAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;updatedAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        },
        &quot;IncidentEvents&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;required&quot;: [
              &quot;type&quot;
            ],
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;type&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;message&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;createdAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;updatedAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        },
        &quot;createdAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;updatedAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;IncidentPost&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;IncidentImpacts&quot;
      ],
      &quot;properties&quot;: {
        &quot;message&quot;: {
          &quot;type&quot;: [
            &quot;object&quot;,
            &quot;null&quot;
          ]
        },
        &quot;affectsAll&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;additionalInformation&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;serviceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;instanceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;IncidentImpacts&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;required&quot;: [
              &quot;startTime&quot;,
              &quot;type&quot;
            ],
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;startTime&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;endTime&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;serviceIssue&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;endUserImpact&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;type&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;createdAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;updatedAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        },
        &quot;IncidentEvents&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;required&quot;: [
              &quot;type&quot;
            ],
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;type&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;message&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;createdAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;updatedAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        }
      }
    },
    &quot;IncidentPatch&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;message&quot;: {
          &quot;type&quot;: [
            &quot;object&quot;,
            &quot;null&quot;
          ]
        },
        &quot;affectsAll&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;additionalInformation&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;serviceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;instanceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;IncidentImpacts&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;required&quot;: [
              &quot;startTime&quot;,
              &quot;type&quot;
            ],
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;startTime&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;endTime&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;serviceIssue&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;endUserImpact&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;type&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;createdAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;updatedAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        },
        &quot;IncidentEvents&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;required&quot;: [
              &quot;type&quot;
            ],
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;type&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;message&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;createdAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;updatedAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        }
      }
    },
    &quot;IncidentImpact&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;startTime&quot;,
        &quot;type&quot;
      ],
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;startTime&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;endTime&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;serviceIssue&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;endUserImpact&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;type&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;createdAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;updatedAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;IncidentImpactType&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;severity&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;isActive&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        }
      }
    },
    &quot;IncidentEvent&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;type&quot;
      ],
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;type&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;message&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;createdAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;updatedAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;IncidentEventType&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;isActive&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        }
      }
    },
    &quot;Maintenance&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;message&quot;: {
          &quot;type&quot;: [
            &quot;object&quot;,
            &quot;null&quot;
          ]
        },
        &quot;externalId&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;name&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;externalMaintenanceType&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;releaseType&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;substrate&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;affectsAll&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;isCore&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;plannedStartTime&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;plannedEndTime&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;additionalInformation&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;serviceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;instanceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;MaintenanceImpacts&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;startTime&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;endTime&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;type&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;systemAvailability&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;createdAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;updatedAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        },
        &quot;createdAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;updatedAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;MaintenancePreview&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;name&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;message&quot;: {
          &quot;type&quot;: [
            &quot;object&quot;,
            &quot;null&quot;
          ]
        },
        &quot;affectsAll&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;isCore&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;plannedStartTime&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;plannedEndTime&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;serviceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;instanceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;externalMaintenanceType&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;releaseType&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;substrate&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        }
      }
    },
    &quot;MaintenanceImpact&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;startTime&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;endTime&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;type&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;systemAvailability&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;createdAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;updatedAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;MaintenanceImpactType&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;severity&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;isActive&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        }
      }
    },
    &quot;MaintenanceEvent&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;type&quot;
      ],
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;type&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;message&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;createdAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;updatedAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;MaintenanceEventType&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;isActive&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        }
      }
    },
    &quot;GeneralMessage&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;subject&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;body&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;startDate&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;date-time&quot;
        },
        &quot;endDate&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;externalId&quot;: {
          &quot;type&quot;: [
            &quot;string&quot;,
            &quot;null&quot;
          ]
        },
        &quot;isVisibleWhenClosed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        }
      }
    },
    &quot;MetricValue&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;metricValueName&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;value&quot;: {
          &quot;type&quot;: &quot;number&quot;,
          &quot;format&quot;: &quot;double&quot;
        },
        &quot;timestamp&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;instanceKey&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;Field&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;key&quot;,
        &quot;model&quot;
      ],
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;model&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;FieldOption&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;visible&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;default&quot;: true
        }
      }
    },
    &quot;Service&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 4098
        },
        &quot;order&quot;: {
          &quot;type&quot;: [
            &quot;integer&quot;,
            &quot;null&quot;
          ],
          &quot;description&quot;: &quot;Order Displayed on the status Timeline.&quot;
        },
        &quot;isCore&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Sets if service is a \&quot;core service\&quot; or not.&quot;
        }
      }
    },
    &quot;Instance&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;key&quot;
      ],
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;location&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;environment&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;releaseVersion&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;releaseNumber&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;isActive&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;maintenanceWindow&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;serviceKeys&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;tags&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;$ref&quot;: &quot;#/definitions/Tag&quot;
          }
        }
      }
    },
    &quot;InstanceStatus&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;key&quot;
      ],
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;location&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;environment&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;releaseVersion&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;releaseNumber&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;maintenanceWindow&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;status&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;A top level status of the instance. If multiple events are ongoing, then provides the most severe.&quot;,
          &quot;maxLength&quot;: 255,
          &quot;enum&quot;: [
            &quot;OK&quot;,
            &quot;MAJOR_INCIDENT_CORE&quot;,
            &quot;MINOR_INCIDENT_CORE&quot;,
            &quot;MAINTENANCE_CORE&quot;,
            &quot;MAJOR_INCIDENT_NONCORE&quot;,
            &quot;MINOR_INCIDENT_NONCORE&quot;,
            &quot;MAINTENANCE_NONCORE&quot;
          ]
        },
        &quot;Incidents&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;required&quot;: [
              &quot;id&quot;
            ],
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;message&quot;: {
                &quot;type&quot;: [
                  &quot;object&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;externalId&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;affectsAll&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;isCore&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;additionalInformation&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;serviceKeys&quot;: {
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              },
              &quot;instanceKeys&quot;: {
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              },
              &quot;IncidentImpacts&quot;: {
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;required&quot;: [
                    &quot;startTime&quot;,
                    &quot;type&quot;
                  ],
                  &quot;properties&quot;: {
                    &quot;id&quot;: {
                      &quot;type&quot;: &quot;integer&quot;
                    },
                    &quot;startTime&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;endTime&quot;: {
                      &quot;type&quot;: [
                        &quot;string&quot;,
                        &quot;null&quot;
                      ]
                    },
                    &quot;serviceIssue&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;endUserImpact&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;type&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;createdAt&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;updatedAt&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  }
                }
              },
              &quot;IncidentEvents&quot;: {
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;required&quot;: [
                    &quot;type&quot;
                  ],
                  &quot;properties&quot;: {
                    &quot;id&quot;: {
                      &quot;type&quot;: &quot;integer&quot;
                    },
                    &quot;type&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;message&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;createdAt&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;updatedAt&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  }
                }
              },
              &quot;createdAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;updatedAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        },
        &quot;Maintenances&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;message&quot;: {
                &quot;type&quot;: [
                  &quot;object&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;externalId&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;name&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;externalMaintenanceType&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;releaseType&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;substrate&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;affectsAll&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;isCore&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;plannedStartTime&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;plannedEndTime&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;additionalInformation&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;serviceKeys&quot;: {
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              },
              &quot;instanceKeys&quot;: {
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              },
              &quot;MaintenanceImpacts&quot;: {
                &quot;type&quot;: &quot;array&quot;,
                &quot;items&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;id&quot;: {
                      &quot;type&quot;: &quot;integer&quot;
                    },
                    &quot;startTime&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;endTime&quot;: {
                      &quot;type&quot;: [
                        &quot;string&quot;,
                        &quot;null&quot;
                      ]
                    },
                    &quot;type&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;systemAvailability&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;createdAt&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;updatedAt&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    }
                  }
                }
              },
              &quot;createdAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;updatedAt&quot;: {
                &quot;type&quot;: &quot;string&quot;
              }
            }
          }
        },
        &quot;GeneralMessages&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;subject&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;body&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;startDate&quot;: {
                &quot;type&quot;: &quot;string&quot;,
                &quot;format&quot;: &quot;date-time&quot;
              },
              &quot;endDate&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;externalId&quot;: {
                &quot;type&quot;: [
                  &quot;string&quot;,
                  &quot;null&quot;
                ]
              },
              &quot;isVisibleWhenClosed&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              }
            }
          }
        }
      }
    },
    &quot;InstanceAlias&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;instanceKey&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;aliasType&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        }
      }
    },
    &quot;Locale&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;name&quot;,
        &quot;code&quot;
      ],
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;name&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;code&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        }
      }
    },
    &quot;Localization&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;modelName&quot;,
        &quot;modelKey&quot;,
        &quot;modelAttribute&quot;
      ],
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;modelName&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;modelKey&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;modelAttribute&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;LocalizedTexts&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;id&quot;: {
                &quot;type&quot;: &quot;integer&quot;
              },
              &quot;text&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;code&quot;: {
                &quot;type&quot;: &quot;string&quot;,
                &quot;maxLength&quot;: 10
              }
            }
          }
        }
      }
    },
    &quot;SubscribeAction&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;emailAddress&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Email address of subscriber&quot;
        },
        &quot;phoneNumber&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;emailSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;default&quot;: true
        },
        &quot;smsSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;default&quot;: false
        },
        &quot;generalMessageEmailSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;default&quot;: false
        },
        &quot;generalMessageSMSSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;default&quot;: false
        },
        &quot;locale&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Locale for alerts&quot;,
          &quot;default&quot;: &quot;en&quot;
        },
        &quot;subscriptions&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;all&quot;: {
              &quot;type&quot;: &quot;boolean&quot;
            },
            &quot;subType&quot;: {
              &quot;type&quot;: &quot;string&quot;,
              &quot;default&quot;: &quot;email&quot;
            },
            &quot;instances&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;additionalProperties&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;all&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;services&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;additionalProperties&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;severities&quot;: {
                          &quot;type&quot;: &quot;object&quot;,
                          &quot;properties&quot;: {
                            &quot;major&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;minor&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            },
                            &quot;maintenances&quot;: {
                              &quot;type&quot;: &quot;boolean&quot;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            &quot;products&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;additionalProperties&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;major&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;minor&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;maintenances&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;Subscriber&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;emailAddress&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Email address of subscriber&quot;
        },
        &quot;locale&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Locale for alerts&quot;
        },
        &quot;subscription&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;all&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;instances&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;additionalProperties&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;all&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
                    },
                    &quot;subType&quot;: {
                      &quot;type&quot;: &quot;string&quot;,
                      &quot;enum&quot;: [
                        &quot;email&quot;,
                        &quot;sms&quot;
                      ]
                    },
                    &quot;services&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;additionalProperties&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;properties&quot;: {
                          &quot;severities&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;properties&quot;: {
                              &quot;major&quot;: {
                                &quot;type&quot;: &quot;boolean&quot;
                              },
                              &quot;minor&quot;: {
                                &quot;type&quot;: &quot;boolean&quot;
                              },
                              &quot;maintenances&quot;: {
                                &quot;type&quot;: &quot;boolean&quot;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              &quot;products&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;additionalProperties&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;subType&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;major&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
                    },
                    &quot;minor&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
                    },
                    &quot;maintenances&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
                    }
                  }
                }
              }
            }
          },
          &quot;description&quot;: &quot;List of Subscriptions&quot;
        },
        &quot;isActive&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Subscriber Status&quot;
        },
        &quot;generalMessageEmailSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
        },
        &quot;generalMessageSMSSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
        },
        &quot;createdAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;updatedAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;emailSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
        },
        &quot;smsSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
        },
        &quot;emailVerified&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Email verified by the user&quot;
        },
        &quot;mobileNumberVerified&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Mobile number verified or not&quot;
        },
        &quot;phoneNumber&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Mobile number&quot;
        }
      }
    },
    &quot;PatchSubscriber&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;locale&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Locale for alerts&quot;
        },
        &quot;subscription&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;all&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;instances&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;additionalProperties&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;all&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
                    },
                    &quot;subType&quot;: {
                      &quot;type&quot;: &quot;string&quot;,
                      &quot;enum&quot;: [
                        &quot;email&quot;,
                        &quot;sms&quot;
                      ]
                    },
                    &quot;services&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;additionalProperties&quot;: {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;properties&quot;: {
                          &quot;severities&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;properties&quot;: {
                              &quot;major&quot;: {
                                &quot;type&quot;: &quot;boolean&quot;
                              },
                              &quot;minor&quot;: {
                                &quot;type&quot;: &quot;boolean&quot;
                              },
                              &quot;maintenances&quot;: {
                                &quot;type&quot;: &quot;boolean&quot;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              &quot;products&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;additionalProperties&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;subType&quot;: {
                      &quot;type&quot;: &quot;string&quot;
                    },
                    &quot;major&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
                    },
                    &quot;minor&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
                    },
                    &quot;maintenances&quot;: {
                      &quot;type&quot;: &quot;boolean&quot;
                    }
                  }
                }
              }
            }
          },
          &quot;description&quot;: &quot;List of Subscriptions&quot;
        },
        &quot;generalMessageEmailSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
        },
        &quot;generalMessageSMSSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Subscriber subscribed to general message or not&quot;
        },
        &quot;createdAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;updatedAt&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;emailSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Email Subscriptions active or not&quot;
        },
        &quot;smsSubscribed&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;SMS Subscriptions active or not&quot;
        },
        &quot;emailVerified&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Email verified by the user&quot;
        },
        &quot;mobileNumberVerified&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;description&quot;: &quot;Mobile number verified or not&quot;
        },
        &quot;phoneNumber&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Mobile number&quot;
        }
      }
    },
    &quot;Subscription&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;all&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;instances&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;additionalProperties&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;all&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;subType&quot;: {
                &quot;type&quot;: &quot;string&quot;,
                &quot;enum&quot;: [
                  &quot;email&quot;,
                  &quot;sms&quot;
                ]
              },
              &quot;services&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;additionalProperties&quot;: {
                  &quot;type&quot;: &quot;object&quot;,
                  &quot;properties&quot;: {
                    &quot;severities&quot;: {
                      &quot;type&quot;: &quot;object&quot;,
                      &quot;properties&quot;: {
                        &quot;major&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;minor&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        },
                        &quot;maintenances&quot;: {
                          &quot;type&quot;: &quot;boolean&quot;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        &quot;products&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;additionalProperties&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;subType&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;major&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;minor&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;maintenances&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              }
            }
          }
        }
      }
    },
    &quot;InstanceSubscription&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;all&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;subType&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;email&quot;,
            &quot;sms&quot;
          ]
        },
        &quot;services&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;additionalProperties&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;severities&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;major&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;minor&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  },
                  &quot;maintenances&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;
                  }
                }
              }
            }
          }
        }
      }
    },
    &quot;ServiceSubscription&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;severities&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;major&quot;: {
              &quot;type&quot;: &quot;boolean&quot;
            },
            &quot;minor&quot;: {
              &quot;type&quot;: &quot;boolean&quot;
            },
            &quot;maintenances&quot;: {
              &quot;type&quot;: &quot;boolean&quot;
            }
          }
        }
      }
    },
    &quot;GenericSubscription&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;type&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;INSTANCE&quot;,
            &quot;PRODUCT&quot;,
            &quot;ALL&quot;
          ]
        },
        &quot;instanceKey&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;subType&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;enum&quot;: [
            &quot;email&quot;,
            &quot;sms&quot;
          ]
        },
        &quot;allInstances&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;allNotifications&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;major&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;minor&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;maintenances&quot;: {
          &quot;type&quot;: &quot;boolean&quot;
        },
        &quot;ServiceSubscriptions&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
              &quot;serviceKey&quot;: {
                &quot;type&quot;: &quot;string&quot;
              },
              &quot;major&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;minor&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              },
              &quot;maintenances&quot;: {
                &quot;type&quot;: &quot;boolean&quot;
              }
            }
          }
        }
      }
    },
    &quot;UnsubscribeAction&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;token&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Unsubscribe JWT Token&quot;
        }
      }
    },
    &quot;LoginAction&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;emailAddress&quot;
      ],
      &quot;properties&quot;: {
        &quot;emailAddress&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;format&quot;: &quot;email&quot;,
          &quot;description&quot;: &quot;Email Address to Send Link to&quot;
        }
      }
    },
    &quot;LogoutAction&quot;: {
      &quot;type&quot;: &quot;object&quot;
    },
    &quot;Product&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;parentId&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;parentName&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;order&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;path&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;public&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;default&quot;: true
        },
        &quot;isActive&quot;: {
          &quot;type&quot;: &quot;boolean&quot;,
          &quot;default&quot;: true
        },
        &quot;name&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;altDisplayName&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;url&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;incidentCount&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;maintenanceCount&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;productCategoryId&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;ProductCategory&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;categoryOrder&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;name&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;Search&quot;: {
      &quot;type&quot;: &quot;object&quot;
    },
    &quot;VerifyUser&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;emailAddress&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Email Address to Send Link to&quot;
        },
        &quot;verificationCode&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;AddNumber&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;emailAddress&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;description&quot;: &quot;Email Address to Send Link to&quot;
        },
        &quot;countryName&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;phoneNumber&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;Tag&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;value&quot;,
        &quot;type&quot;
      ],
      &quot;properties&quot;: {
        &quot;id&quot;: {
          &quot;type&quot;: &quot;integer&quot;
        },
        &quot;value&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;type&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;Instances&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;$ref&quot;: &quot;#/definitions/Instance&quot;
          }
        }
      }
    },
    &quot;TagType&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;required&quot;: [
        &quot;key&quot;
      ],
      &quot;properties&quot;: {
        &quot;key&quot;: {
          &quot;type&quot;: &quot;string&quot;,
          &quot;maxLength&quot;: 255
        },
        &quot;Tags&quot;: {
          &quot;type&quot;: &quot;array&quot;,
          &quot;items&quot;: {
            &quot;$ref&quot;: &quot;#/definitions/Tag&quot;
          }
        }
      }
    },
    &quot;CountryCode&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;name&quot;: {
          &quot;type&quot;: &quot;string&quot;
        },
        &quot;code&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;NotFoundError&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;message&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    },
    &quot;Error&quot;: {
      &quot;type&quot;: &quot;object&quot;,
      &quot;properties&quot;: {
        &quot;message&quot;: {
          &quot;type&quot;: &quot;string&quot;
        }
      }
    }
  },
  &quot;parameters&quot;: {
    &quot;localeParams&quot;: {
      &quot;name&quot;: &quot;locale&quot;,
      &quot;in&quot;: &quot;query&quot;,
      &quot;type&quot;: &quot;string&quot;,
      &quot;required&quot;: false,
      &quot;description&quot;: &quot;Two-letter language code ISO 639-1 code.\nIf objects in response have any associated Localizations, the objects\nwill also return fields with localized text.\nDepending on internal configuration, a default may be set.\n&quot;
    }
  }
}</schema>
    <schemaType>OpenApi</schemaType>
    <serviceBinding>{&quot;host&quot;:null,&quot;basePath&quot;:&quot;/v1&quot;,&quot;allowedSchemes&quot;:[&quot;HTTPS&quot;],&quot;requestMediaTypes&quot;:[&quot;application/json&quot;],&quot;responseMediaTypes&quot;:[&quot;application/json&quot;],&quot;compatibleMediaTypes&quot;:{}}</serviceBinding>
    <status>Complete</status>
    <systemVersion>5</systemVersion>
</ExternalServiceRegistration>
